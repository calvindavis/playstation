{
  "version": 3,
  "sources": ["/home/runner/work/playstation/playstation/src/index.ts"],
  "sourcesContent": ["import {\n\tAmbientLight,\n\tGroup,\n\tPerspectiveCamera,\n\tPointLight,\n\tScene,\n\tVector2,\n\tWebGLRenderer,\n} from \"three\";\nimport CircleIcon from \"./CircleIcon\";\nimport CrossIcon from \"./CrossIcon\";\nimport Icon from \"./Icon\";\nimport SquareIcon from \"./SquareIcon\";\nimport TriangleIcon from \"./TriangleIcon\";\n\ninterface ResizeRendererResult {\n\tdidResize: boolean;\n\theight?: number;\n\twidth?: number;\n}\n\nfunction resizeRenderer(renderer: WebGLRenderer): ResizeRendererResult {\n\tconst canvas = renderer.domElement;\n\tconst width = canvas.clientWidth;\n\tconst height = canvas.clientHeight;\n\tconst shouldResize = width !== canvas.width || height !== canvas.height;\n\n\tif (shouldResize) {\n\t\trenderer.setSize(width, height, false);\n\t}\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tdidResize: shouldResize,\n\t};\n}\n\nconst canvas = document.querySelector<HTMLCanvasElement>(\".js-canvas\");\nconst renderer = new WebGLRenderer({ canvas });\nconst scene = new Scene();\nconst camera = new PerspectiveCamera(50, 2, 0.1, 15);\n\nconst icons: Icon[] = [\n\tnew TriangleIcon(0, -1),\n\tnew SquareIcon(1, -1),\n\tnew CircleIcon(1, 0),\n\tnew CrossIcon(1, 1),\n\tnew TriangleIcon(0, 1),\n\tnew SquareIcon(-1, 1),\n\tnew CircleIcon(-1, 0),\n\tnew CrossIcon(-1, -1),\n];\n\nconst mouse = new Vector2(0, 0);\n\ndocument.addEventListener(\"mousemove\", function (event) {\n\tconst width = canvas.clientWidth;\n\tconst halfWidth = width / 2;\n\tconst x = (event.clientX - halfWidth) / halfWidth;\n\tconst height = canvas.clientHeight;\n\tconst halfHeight = height / 2;\n\tconst y = (event.clientY - halfHeight) / halfHeight;\n\n\t// TODO Calculate real projection of screen to scene.\n\tmouse.set(3 * x, -3 * y);\n});\n\nconst group = new Group();\nicons.forEach(function (icon) {\n\tgroup.add(icon.mesh);\n});\ngroup.position.set(0, 0, 0);\n\nscene.add(group);\n\nconst light = new PointLight(0xffffff, 1);\nlight.position.set(mouse.x, mouse.y, 0);\nscene.add(light);\n\nconst ambient = new AmbientLight(0x111111);\nscene.add(ambient);\n\nfunction render(time: number): void {\n\tconst scroll = window.scrollY / window.innerHeight;\n\n\tconst resizeResult = resizeRenderer(renderer);\n\tif (resizeResult.didResize) {\n\t\tcamera.aspect = resizeResult.width / resizeResult.height;\n\t\tcamera.updateProjectionMatrix();\n\t}\n\n\tlight.position.set(mouse.x, mouse.y, 0);\n\n\tgroup.rotation.y = Math.PI * scroll;\n\n\ticons.forEach(function (icon) {\n\t\ticon.update(time);\n\t});\n\n\trenderer.render(scene, camera);\n\trequestAnimationFrame(render);\n}\n\nrequestAnimationFrame(render);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AACA;AAQA,wBAAwB;AACvB,QAAM,UAAS,UAAS;AACxB,QAAM,QAAQ,QAAO;AACrB,QAAM,SAAS,QAAO;AACtB,QAAM,eAAe,UAAU,QAAO,SAAS,WAAW,QAAO;AAEjE,MAAI;AACH,cAAS,QAAQ,OAAO,QAAQ;AAAA;AAGjC,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA,WAAW;AAAA;AAAA;AAIb,MAAM,SAAS,SAAS,cAAiC;AACzD,MAAM,WAAW,IAAI,cAAc,CAAE;AACrC,MAAM,QAAQ,IAAI;AAClB,MAAM,SAAS,IAAI,kBAAkB,IAAI,GAAG,KAAK;AAEjD,MAAM,QAAgB;AAAA,EACrB,IAAI,aAAa,GAAG;AAAA,EACpB,IAAI,WAAW,GAAG;AAAA,EAClB,IAAI,WAAW,GAAG;AAAA,EAClB,IAAI,UAAU,GAAG;AAAA,EACjB,IAAI,aAAa,GAAG;AAAA,EACpB,IAAI,WAAW,IAAI;AAAA,EACnB,IAAI,WAAW,IAAI;AAAA,EACnB,IAAI,UAAU,IAAI;AAAA;AAGnB,MAAM,QAAQ,IAAI,QAAQ,GAAG;AAE7B,SAAS,iBAAiB,aAAa,SAAU;AAChD,QAAM,QAAQ,OAAO;AACrB,QAAM,YAAY,QAAQ;AAC1B,QAAM,IAAK,OAAM,UAAU,aAAa;AACxC,QAAM,SAAS,OAAO;AACtB,QAAM,aAAa,SAAS;AAC5B,QAAM,IAAK,OAAM,UAAU,cAAc;AAGzC,QAAM,IAAI,IAAI,GAAG,KAAK;AAAA;AAGvB,MAAM,QAAQ,IAAI;AAClB,MAAM,QAAQ,SAAU;AACvB,QAAM,IAAI,KAAK;AAAA;AAEhB,MAAM,SAAS,IAAI,GAAG,GAAG;AAEzB,MAAM,IAAI;AAEV,MAAM,QAAQ,IAAI,WAAW,UAAU;AACvC,MAAM,SAAS,IAAI,MAAM,GAAG,MAAM,GAAG;AACrC,MAAM,IAAI;AAEV,MAAM,UAAU,IAAI,aAAa;AACjC,MAAM,IAAI;AAEV,gBAAgB;AACf,QAAM,SAAS,OAAO,UAAU,OAAO;AAEvC,QAAM,eAAe,eAAe;AACpC,MAAI,aAAa;AAChB,WAAO,SAAS,aAAa,QAAQ,aAAa;AAClD,WAAO;AAAA;AAGR,QAAM,SAAS,IAAI,MAAM,GAAG,MAAM,GAAG;AAErC,QAAM,SAAS,IAAI,KAAK,KAAK;AAE7B,QAAM,QAAQ,SAAU;AACvB,SAAK,OAAO;AAAA;AAGb,WAAS,OAAO,OAAO;AACvB,wBAAsB;AAAA;AAGvB,sBAAsB;",
  "names": []
}
